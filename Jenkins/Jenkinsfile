pipeline {
    agent any

    stages {
        stage('Sync s3') {
            steps {
                script {
                    withCredentials([
                        [$class: 'AmazonWebServicesCredentialsBinding', 
                         accessKeyVariable: 'AWS_ACCESS_KEY_ID', 
                         secretKeyVariable: 'AWS_SECRET_ACCESS_KEY', 
                         credentialsId: '62c39d7a-6bdc-474a-9d4f-7c379e3b7c9d']
                    ]) {
                        sshagent(['7fd9e024-a02b-4745-ae76-2921235d9980']) {
                            sh '''
                            ssh -o StrictHostKeyChecking=no ec2-user@35.173.212.164 \
                                "export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}; \
                                export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}; \
                                aws s3 sync s3://docker-image3424644/app1/ /home/ec2-user/app1; \
                                sudo mkdir -p /var/lib/docker/volumes/niutecklandpage_prd_app/_data; \
                                cd /home/ec2-user/app1; \
                                sudo rsync -avu --exclude='Jenkins/' . /var/lib/docker/volumes/niutecklandpage_prd_app/_data; \
                                sudo chown -Rv ec2-user:ec2-user /var/lib/docker/volumes/niutecklandpage_prd_app/_data; \
                                sudo chmod -Rv 775 /var/lib/docker/volumes/niutecklandpage_prd_app/_data; \
                                "
                            '''
                        }
                    }
                }
            }
        }

        stage('Clonar o reposit√≥rio') {
            steps {
                script {
                    sshagent(['7fd9e024-a02b-4745-ae76-2921235d9980']) {
                        sh '''
                        ssh -o StrictHostKeyChecking=no ec2-user@35.173.212.164 "
                            sudo yum install git -y
                            rm -rf /home/ec2-user/dotnet-docker-pipeline
                            git clone https://github.com/fabiosleal2712/dotnet-docker-pipeline.git || true
                            cd /home/ec2-user/dotnet-docker-pipeline
                           "
                        '''
                    }
                }
            }
        }

        stage('Run Another Docker Container on EC2') {
            steps {
                script {
                    sshagent(['7fd9e024-a02b-4745-ae76-2921235d9980']) {
                        sh '''
                        ssh -o StrictHostKeyChecking=no ec2-user@35.173.212.164 "
                            cd /home/ec2-user/dotnet-docker-pipeline
                             docker-compose up -d
                        "
                        '''
                    }
                }
            }
        }
    }
}
